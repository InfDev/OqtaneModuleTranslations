<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ShowCategoryFilter" xml:space="preserve">
    <value>Показати фільтр категорій</value>
  </data>
  <data name="ShowAdminTools" xml:space="preserve">
    <value>Показати інструменти адміністрування</value>
  </data>
  <data name="TagAppearance.HelpText" xml:space="preserve">
    <value>Встановіть зовнішній вигляд кнопок тегів</value>
  </data>
  <data name="NumberOfTagsInIndex.HelpText" xml:space="preserve">
    <value>Індекс - це всі теги, що використовуються, згруповані за частотою використання</value>
  </data>
  <data name="MaxNumberItems.HelpText" xml:space="preserve">
    <value>Виберіть кількість публікацій, які потрібно відібрати. наприклад, перші 20 публікацій.</value>
  </data>
  <data name="Categories.HelpText" xml:space="preserve">
    <value>Категорії, які можна використовувати для переліку елементів</value>
  </data>
  <data name="PagerPosition" xml:space="preserve">
    <value>Позиція пейджера</value>
  </data>
  <data name="ShowSearchFeedback" xml:space="preserve">
    <value>Показати пошуковий відгук</value>
  </data>
  <data name="AllowTagFilter" xml:space="preserve">
    <value>Дозволити фільтр тегів</value>
  </data>
  <data name="ShowSearchFeedback.HelpText" xml:space="preserve">
    <value>Відображення зворотного зв'язку для пошуку.</value>
  </data>
  <data name="PagerPosition.HelpText" xml:space="preserve">
    <value>Виберіть, де має бути розміщений пейджер.</value>
  </data>
  <data name="NewDuration" xml:space="preserve">
    <value>Зберігати «Нова» днів:</value>
  </data>
  <data name="NumberOfTagsInIndex" xml:space="preserve">
    <value>Кількість тегів, що відображаються</value>
  </data>
  <data name="ShowTextSearch.HelpText" xml:space="preserve">
    <value>Показати або сховати пошуковий запит.</value>
  </data>
  <data name="AllowTagFilter.HelpText" xml:space="preserve">
    <value>Коли встановлено, дозволяється клацати елементи тегів і будуть повернені лише ці елементи</value>
  </data>
  <data name="ItemsPerPage.HelpText" xml:space="preserve">
    <value>Выберите количество элементов, которые должны отображаться на странице.</value>
  </data>
  <data name="AllowDiscovery.HelpText" xml:space="preserve">
    <value>Якщо встановлено Так, елемент з'явиться у списку вибору Timelines. Тільки так тимчасова шкала працюватиме.</value>
  </data>
  <data name="ShowTextSearch" xml:space="preserve">
    <value>Показати текстовий пошук</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Категорії</value>
  </data>
  <data name="TagRounded.HelpText" xml:space="preserve">
    <value>При виборі надайте тегам округлий вигляд.</value>
  </data>
  <data name="ChartNumberDisplay.HelpText" xml:space="preserve">
    <value>Выберите количество элементов, которые будут отображаться сбоку от изображения</value>
  </data>
  <data name="NewDuration.HelpText" xml:space="preserve">
    <value>Після видалення публікація залишиться «Новою» протягом встановленої кількості днів.</value>
  </data>
  <data name="ChartNumberDisplay" xml:space="preserve">
    <value>Кількість карток</value>
  </data>
  <data name="SelectModule" xml:space="preserve">
    <value>Виберіть модуль Публікації</value>
  </data>
  <data name="TagAppearance" xml:space="preserve">
    <value>Зовнішній вигляд тега</value>
  </data>
  <data name="AllowDiscovery" xml:space="preserve">
    <value>Дозволити виявлення</value>
  </data>
  <data name="ItemsPerPage" xml:space="preserve">
    <value>Элементов на странице</value>
  </data>
  <data name="ShowCategoryFilter.HelpText" xml:space="preserve">
    <value>Показати або приховати селектор категорій</value>
  </data>
  <data name="MaxNumberItems" xml:space="preserve">
    <value>Максимальное число элементов</value>
  </data>
</root>